/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class Student extends javax.swing.JFrame {

    private DefaultTableModel model;
    private Connection connect;
    private ResultSet resultSet;
    private PreparedStatement preparedStatement;
    private ResultSetMetaData resultSetMetaData;
    String ID;
    String userName;

    private Object[] content;

    /**
     * Creates new form Student
     */
    public Student(String userName) {
        initComponents();
        icon();
        setResizable(false);
        setSize(810, 580);
        this.userName = userName;
        btnAccount.setText(userName);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        //setTitle("Student");
        connect = ConnectDatabase.getConnection();
        model = (DefaultTableModel) table.getModel();
        showAvartar();
        getID();
        thongTin();
        showTable();
        System.out.println(ID);
    }

    public void icon() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("school.png")));
    }

    public void thongTin() {
        try {
            preparedStatement = connect.prepareStatement("SELECT person.name ,student.class,person.ngaySinh,person.Address FROM person,student WHERE person.ID = student.ID_Student AND person.ID = ?");
            preparedStatement.setString(1, ID);
            resultSet = preparedStatement.executeQuery();
            if (resultSet.first()) {
                tTen.setText(String.valueOf(resultSet.getString(1)));
                tLop.setText(String.valueOf(resultSet.getString(2)));
                tNgaySinh.setText(String.valueOf(resultSet.getString(3)));
                tDiaChi.setText(String.valueOf(resultSet.getString(4)));
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    public void getID() {
        try {
            preparedStatement = connect.prepareStatement("SELECT user.ID FROM user WHERE userName=? ");
            preparedStatement.setString(1, userName);
            resultSet = preparedStatement.executeQuery();
            if (resultSet.first()) {
                ID = String.valueOf(resultSet.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());

        }
    }

    public void showAvartar() {
        try {
            preparedStatement = connect.prepareStatement("SELECT avatar FROM user WHERE userName=? AND avatar!= ?");
            preparedStatement.setString(1, userName);
            preparedStatement.setString(2, "");
            resultSet = preparedStatement.executeQuery();
            if (resultSet.first()) {
                avatar(resultSet.getString(1));
            } else {
                avatar("src/Main/HinhAnh/Icon/icons8-account-80.png");
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    public void avatar(String URL) {
        try {
            BufferedImage image = ImageIO.read(new File(URL));
            ImageIcon icon = new ImageIcon(image.getScaledInstance(140, 110, image.SCALE_SMOOTH));
            lblAccount.setIcon(icon);
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBackground = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblAccount = new javax.swing.JLabel();
        btnAccount = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblSearching = new javax.swing.JLabel();
        txtSearching = new javax.swing.JTextField();
        btnSearching = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnLogOut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tDiaChi = new javax.swing.JTextField();
        tTen = new javax.swing.JTextField();
        tLop = new javax.swing.JTextField();
        tNgaySinh = new javax.swing.JTextField();
        btnRefesh = new javax.swing.JButton();
        lblbackGround = new javax.swing.JLabel();

        lblBackground.setIcon(new javax.swing.ImageIcon("C:\\Users\\ly.doan.PN\\Downloads\\nen2.jpg")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        lblAccount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jPanel1.add(lblAccount);
        lblAccount.setBounds(0, 0, 140, 110);

        btnAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/HinhAnh/Icon/icons8-screenshot-26.png"))); // NOI18N
        btnAccount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        btnAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccountActionPerformed(evt);
            }
        });
        jPanel1.add(btnAccount);
        btnAccount.setBounds(0, 110, 140, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 20, 140, 150);

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 255));
        lblTitle.setText("PHẦN MỀM XEM ĐIỂM CHO HỌC SINH");
        getContentPane().add(lblTitle);
        lblTitle.setBounds(210, 30, 500, 30);

        lblSearching.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        lblSearching.setForeground(new java.awt.Color(255, 0, 51));
        lblSearching.setText("SEARCHING:");
        getContentPane().add(lblSearching);
        lblSearching.setBounds(200, 100, 140, 30);

        txtSearching.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtSearching);
        txtSearching.setBounds(330, 100, 320, 30);

        btnSearching.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/HinhAnh/Icon/icons8-search-24.png"))); // NOI18N
        btnSearching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchingActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearching);
        btnSearching.setBounds(660, 100, 50, 30);

        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Môn", "KTM", "KT 15'", "KT 1 Tiết", "KT 1 Tiết", "HK", "Điểm TB"
            }
        ));
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(250, 210, 540, 230);

        btnLogOut.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 0, 0));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/HinhAnh/Icon/icons8-export-16.png"))); // NOI18N
        btnLogOut.setText("LOG OUT");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogOut);
        btnLogOut.setBounds(640, 490, 130, 40);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("-------------Thông Tin------------");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 210, 190, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Địa Chỉ:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 380, 60, 14);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Tên:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 260, 34, 14);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Lớp:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 300, 34, 10);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Ngày Sinh:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 330, 70, 20);

        tDiaChi.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tDiaChi.setEnabled(false);
        getContentPane().add(tDiaChi);
        tDiaChi.setBounds(90, 370, 130, 30);

        tTen.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tTen.setEnabled(false);
        getContentPane().add(tTen);
        tTen.setBounds(90, 250, 130, 30);

        tLop.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tLop.setEnabled(false);
        getContentPane().add(tLop);
        tLop.setBounds(90, 290, 130, 30);

        tNgaySinh.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tNgaySinh.setEnabled(false);
        getContentPane().add(tNgaySinh);
        tNgaySinh.setBounds(90, 330, 130, 30);

        btnRefesh.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnRefesh.setForeground(new java.awt.Color(255, 0, 0));
        btnRefesh.setText("REFESH ");
        btnRefesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefeshActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefesh);
        btnRefesh.setBounds(490, 500, 90, 30);

        lblbackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/HinhAnh/AnhNen/nen2.jpg"))); // NOI18N
        getContentPane().add(lblbackGround);
        lblbackGround.setBounds(0, 0, 800, 580);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void showTable() {
        model.setRowCount(0);
        try {
            preparedStatement = connect.prepareStatement("SELECT Diem.mon,KTM,KTMuoiLam,KTMotTietMot,KTMotTietHai,HK,DiemTB FROM Diem WHERE Diem.ID_Student=? ;");
            preparedStatement.setString(1, ID);
            resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                Object[] arr = {
                    resultSet.getString(1),
                    resultSet.getString(2),
                    resultSet.getString(3),
                    resultSet.getString(4),
                    resultSet.getString(5),
                    resultSet.getString(6),
                    resultSet.getString(7)
                };
                model.addRow(arr);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    public void showSearching() {
        model.setRowCount(0);
        try {
            preparedStatement = connect.prepareStatement("SELECT Diem.mon,KTM,KTMuoiLam,KTMotTietMot,KTMotTietHai,HK,DiemTB FROM Diem WHERE Diem.ID_Student=? AND Diem.mon LIKE ?;");
            preparedStatement.setString(1, ID);
            preparedStatement.setString(2, "%" + txtSearching.getText() + "%");
            resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                Object[] arr = {
                    resultSet.getString(1),
                    resultSet.getString(2),
                    resultSet.getString(3),
                    resultSet.getString(4),
                    resultSet.getString(5),
                    resultSet.getString(6),
                    resultSet.getString(7)
                };
                model.addRow(arr);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void btnAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccountActionPerformed
        // TODO add your handling code here:
        String anh = "";
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("C:\\temp"));
        chooser.setFileFilter(new FileNameExtensionFilter("PNG images", "png"));
        chooser.setFileFilter(new FileNameExtensionFilter("JPG images", "jpg"));
        int returnValue = chooser.showOpenDialog(chooser);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            anh = String.valueOf(chooser.getSelectedFile());
        }

        try {
            preparedStatement = connect.prepareStatement("UPDATE user SET avatar = ? WHERE userName = ?");
            preparedStatement.setString(1, anh);
            preparedStatement.setString(2, userName);
            preparedStatement.execute();
            showAvartar();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }//GEN-LAST:event_btnAccountActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        int luaChon = JOptionPane.showConfirmDialog(null, "Do You Want To Log Out?", "Masage", JOptionPane.YES_NO_OPTION, 0);
        if (luaChon == JOptionPane.OK_OPTION) {
            login_register login_register = new login_register();
            login_register.setVisible(true);
            setVisible(false);
        }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnSearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchingActionPerformed
        // TODO add your handling code here:
        showSearching();
    }//GEN-LAST:event_btnSearchingActionPerformed

    private void btnRefeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefeshActionPerformed
        showTable();
    }//GEN-LAST:event_btnRefeshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student("mymy").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccount;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnRefesh;
    private javax.swing.JButton btnSearching;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccount;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblSearching;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblbackGround;
    private javax.swing.JTextField tDiaChi;
    private javax.swing.JTextField tLop;
    private javax.swing.JTextField tNgaySinh;
    private javax.swing.JTextField tTen;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtSearching;
    // End of variables declaration//GEN-END:variables
}
